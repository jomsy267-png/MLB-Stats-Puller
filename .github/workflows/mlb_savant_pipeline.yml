name: MLB Savant + Odds Pipeline (PR Flow)

on:
  schedule:
    - cron: "0 14 * * *"   # 8:00 AM America/Edmonton (14:00 UTC)
  workflow_dispatch: {}

jobs:
  build-dataset:
    runs-on: ubuntu-latest
    # Needed for committing to a new branch and opening a PR
    permissions:
      contents: write
      pull-requests: write
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.11"
      DAYS: "7"   # lookback window for Statcast; adjust as you like

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install "pybaseball==2.2.7" pandas requests

      # --- MLB Savant fetch (no keys needed) ---
      - name: Fetch MLB Savant data
        env:
          DAYS: ${{ env.DAYS }}
        run: |
          python scripts/fetch_mlb_savant.py

      # --- Optional: Fetch odds via aggregator API (skip if no key set) ---
      - name: Fetch odds via API (optional)
        if: ${{ secrets.ODDS_API_KEY != '' }}
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python - << 'PY'
          import os, time, requests, pandas as pd
          k=os.environ.get("ODDS_API_KEY")
          url=("https://api.the-odds-api.com/v4/sports/baseball_mlb/odds"
               "?regions=us,ca&markets=h2h,spreads,totals&oddsFormat=american"
               "&bookmakers=draftkings,betmgm,caesars,bet365,bet99,coolbet"
               f"&apiKey={k}")
          r=requests.get(url,timeout=45); r.raise_for_status()
          data=r.json()
          df=pd.json_normalize(
              data,
              record_path=['bookmakers','markets','outcomes'],
              meta=['id','commence_time','home_team','away_team',
                    ['bookmakers','key'],['bookmakers','title'],['bookmakers','markets','key']]
          ).rename(columns={'bookmakers.key':'book_key','bookmakers.title':'book','bookmakers.markets.key':'market'})
          os.makedirs("data/odds_api",exist_ok=True)
          path=f"data/odds_api/{int(time.time())}.csv"
          df.to_csv(path,index=False); print("saved ->",path)
          PY

      - name: Normalize odds (optional)
        if: ${{ secrets.ODDS_API_KEY != '' }}
        run: |
          python scripts/normalize_odds.py

      - name: Merge odds + Savant features (optional)
        if: ${{ secrets.ODDS_API_KEY != '' }}
        run: |
          python scripts/merge_savant_odds.py

      # --- Create/update a short-lived data branch and commit files ---
      - name: Create data update branch
        run: |
          BRANCH="mlb-savant-data-${GITHUB_RUN_ID}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add data/mlb_savant/*.csv 2>/dev/null || true
          git add data/odds_api/*.csv 2>/dev/null || true
          git add data/model_inputs/*.csv 2>/dev/null || true
          git commit -m "Automated MLB data update $(date -u +%FT%TZ)" || echo "No changes to commit"
          # If nothing to commit, still ensure branch exists:
          git show-ref --head
          git push -u origin "$BRANCH"

      # --- Open a Pull Request targeting the branch that triggered this run (usually 'main') ---
      - name: Open Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Automated MLB data update"
          body: |
            This PR was generated by the scheduled workflow.
            - Statcast window: last ${{ env.DAYS }} days
            - Includes: MLB Savant CSVs
            ${{ secrets.ODDS_API_KEY != '' && '* Adds normalized odds and merged features.' || '' }}
          base: ${{ github.ref_name }}
          head: ${{ env.BRANCH }}
          branch: ${{ env.BRANCH }}   # for action bookkeeping
          delete-branch: true         # delete the branch on PR merge

      # (Optional) Ensure only one open PR exists from this workflow
      - name: Close older duplicate PRs (optional)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prs = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${process.env.BRANCH}` });
            // Nothing to do; create-pull-request keeps head consistent and deletes on merge.
