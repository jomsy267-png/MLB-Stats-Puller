name: MLB Savant + Odds Pipeline (PR Flow)

on:
  workflow_dispatch: {}
  # You can also add a schedule here if you want this to run independently:
  # schedule:
  #   - cron: "30 14 * * *"

jobs:
  build-dataset:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.11"
      DAYS: "7"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install "pybaseball==2.2.7" pandas requests

      - name: Fetch MLB Savant (ensures fresh local files for merge)
        env:
          DAYS: ${{ env.DAYS }}
        run: python scripts/fetch_mlb_savant.py

      # Detect if ODDS_API_KEY exists (so we can conditionally run odds steps)
      - name: Check if ODDS_API_KEY exists
        id: check_key
        shell: bash
        run: |
          if [ -n "${{ secrets.ODDS_API_KEY }}" ]; then
            echo "has_key=true" >> $GITHUB_OUTPUT
          else
            echo "has_key=false" >> $GITHUB_OUTPUT
          fi

      - name: Fetch odds via API (optional)
        if: steps.check_key.outputs.has_key == 'true'
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python - << 'PY'
          import os, time, requests, pandas as pd
          k=os.environ.get("ODDS_API_KEY")
          url=("https://api.the-odds-api.com/v4/sports/baseball_mlb/odds"
               "?regions=us,ca&markets=h2h,spreads,totals&oddsFormat=american"
               "&bookmakers=draftkings,betmgm,caesars,bet365,bet99,coolbet"
               f"&apiKey={k}")
          r=requests.get(url,timeout=60); r.raise_for_status()
          data=r.json()
          df=pd.json_normalize(
              data,
              record_path=['bookmakers','markets','outcomes'],
              meta=['id','commence_time','home_team','away_team',
                    ['bookmakers','key'],['bookmakers','title'],['bookmakers','markets','key']]
          ).rename(columns={'bookmakers.key':'book_key','bookmakers.title':'book','bookmakers.markets.key':'market'})
          os.makedirs("data/odds_api",exist_ok=True)
          path=f"data/odds_api/{int(time.time())}.csv"
          df.to_csv(path,index=False); print("saved ->",path)
          PY

      - name: Normalize odds
        if: steps.check_key.outputs.has_key == 'true'
        run: python scripts/normalize_odds.py

      - name: Merge odds + Savant features
        if: steps.check_key.outputs.has_key == 'true'
        run: python scripts/merge_savant_odds.py

      # Create a short-lived branch, commit outputs, open PR
      - name: Create data update branch
        run: |
          BRANCH="mlb-savant-data-${GITHUB_RUN_ID}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add data/mlb_savant/*.csv 2>/dev/null || true
          git add data/odds_api/*.csv 2>/dev/null || true
          git add data/model_inputs/*.csv 2>/dev/null || true
          git commit -m "Automated MLB data update $(date -u +%FT%TZ)" || echo "No changes"
          git push -u origin "$BRANCH"

      - name: Upload all CSVs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlb-pipeline-${{ github.run_id }}
          path: |
            data/mlb_savant/**/*.csv
            data/odds_api/**/*.csv
            data/model_inputs/**/*.csv
          if-no-files-found: warn

      - name: Open Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Automated MLB data update"
          body: |
            Generated automatically.
            - Statcast window: last ${{ env.DAYS }} days
            ${{ steps.check_key.outputs.has_key == 'true' && '* Includes odds + merged features.' || '* Savant data only.' }}
          base: ${{ github.ref_name }}
          branch: ${{ env.BRANCH }}
          delete-branch: true
